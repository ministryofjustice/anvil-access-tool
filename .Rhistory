View(pris_lookup)
pris_lookup[soct_region == "East", soct_region := "East & East Midlands"]
View(pris_lookup)
library(readr)
write_csv(pris_lookup, "www/prisons_and_areas.txt")
nrow(pris_lookup[!is.na(prison)])
nrow(pris_lookup[!is.na(soct_region)])
shiny::runApp()
runApp()
runApp()
shiny::runApp()
View(pris_lookup)
unique(pris_lookup$soct_region)
na.omit(unique(pris_lookup$soct_region))
na.omit(unique(pris_lookup$soct_region))[[1]]
na.omit(unique(pris_lookup$soct_region))[1
]
na.omit(unique(pris_lookup$soct_region))
## global.R
## Load libraries
library(shiny)          ##
library(shinydashboard) ##
library(shinyWidgets)   ##
library(shinythemes)    ##
library(data.table)     ##
library(DT)             ##
library(shinyjs)        ##
library(shinyalert)     ##
## Load prison dropdown from s3
dt.prisons <- data.table::as.data.table(s3tools::s3_path_to_full_df(
"alpha-app-anvil-access-tool/prisons_and_offices_v2.csv", header = FALSE))
fields <- c("first_name", "surname", "prison", "role", "quantum_id",
"bentham", "bentham_reason", "drugs_prison", "drugs_prison_reason",
"network", "network_reason", "visitors", "visitors_reason",
"novel_drugs", "novel_drugs_reason",
"safety", "categorisation", "date_requested",
"account", "email")
email_choice <- c("@noms.gsi.gov.uk", "@justice.gov.uk", "@hmps.gov.uk", "@hmcts.gov.uk",
"@probation.gov.uk", "@justice.gsi.gov.uk", "@digital.justice.gov.uk")
foundErrors <- 0
quantumErr <- 0
tick <- "<i class=\"fa fa-check de-color\" aria-hidden=\"true\"></i>"
cross <- "<i class=\"fa fa-times de-color\" aria-hidden=\"true\"></i>"
## Reload data from S3
responses <- as.data.table(s3tools::s3_path_to_full_df(
"alpha-app-anvil-access-tool/anvil-app-responses_v4.csv", header = TRUE,
col_types = list(
col_character(),
col_character(),
col_character(),
col_character(),
col_character(),
col_integer(),
col_character(),
col_integer(),
col_character(),
col_integer(),
col_character(),
col_integer(),
col_character(),
col_integer(),
col_character(),
col_integer(),
col_integer(),
col_date(),
col_character(),
col_character()
)))
pris_lookup_trim <- pris_lookup[prison %in% dt.prisons$Prison]
setdiff(dt.prisons$Prison, pris_lookup_trim$prison)
View(pris_lookup_trim)
View(dt.prisons)
View(pris_lookup)
pris_lookup[prison %in% c(dt.prisons$Prison, "Grendon", "Spring Hill", "Usk", "Prescoed", "Verne"), active := T]
View(pris_lookup)
length(pris_lookup[!is.na(active)])
length(pris_lookup[!is.na(active)])
nrow(pris_lookup[!is.na(active)])
View(pris_lookup)
pris_lookup[is.na(active), active := F]
rbind(pris_lookup, data.table(prison="HQ",prison_code="HQ",soct_region="HQ",active=T))
View(pris_lookup)
## global.R
## Load libraries
library(shiny)          ##
library(shinydashboard) ##
library(shinyWidgets)   ##
library(shinythemes)    ##
library(data.table)     ##
library(DT)             ##
library(shinyjs)        ##
library(shinyalert)     ##
## Reload data from S3
responses <- as.data.table(s3tools::s3_path_to_full_df(
"alpha-app-anvil-access-tool/anvil-app-responses_v4.csv", header = TRUE,
col_types = list(
col_character(),
col_character(),
col_character(),
col_character(),
col_character(),
col_integer(),
col_character(),
col_integer(),
col_character(),
col_integer(),
col_character(),
col_integer(),
col_character(),
col_integer(),
col_character(),
col_date(),
col_character(),
col_character()
)))
View(responses)
## Reload data from S3
responses <- as.data.table(s3tools::s3_path_to_full_df(
"alpha-app-anvil-access-tool/anvil-app-responses_v5.csv", header = TRUE,
col_types = list(
col_character(),
col_character(),
col_character(),
col_character(),
col_character(),
col_integer(),
col_character(),
col_integer(),
col_character(),
col_integer(),
col_character(),
col_integer(),
col_character(),
col_integer(),
col_character(),
col_date(),
col_character(),
col_character()
)))
View(responses)
names(responses) <- fields
fields
colnames(responses)
fields <- c("first_name", "surname", "prison", "role", "quantum_id",
"bentham", "bentham_reason", "drugs_prison", "drugs_prison_reason",
"network", "network_reason", "visitors", "visitors_reason",
"novel_drugs", "novel_drugs_reason",
"date_requested", "account", "email")
names(responses) <- fields
responses[date_requested == "", date_requested := NA]
responses[drugs_prison == "", drugs_prison := 0]
responses[drugs_prison_reason == "", drugs_prison_reason := NA]
names(responses) <- fields
responses[date_requested == "", date_requested := NA]
responses[bentham == "", bentham := 0]
responses[bentham_reason == "", bentham_reason := NA]
responses[drugs_prison == "", drugs_prison := 0]
responses[drugs_prison_reason == "", drugs_prison_reason := NA]
responses[network == "", network := 0]
responses[network_reason == "", network_reason := NA]
responses[visitors == "", visitors := 0]
responses[visitors_reason == "", visitors_reason := NA]
responses[novel_drugs == "", novel_drugs := 0]
responses[novel_drugs_reason == "", novel_drugs_reason := NA]
responses$date_requested <- as.Date(responses$date_requested, origin = "1970-01-01")
exists ("responses")
data$bentham <- as.integer(data$bentham)
#Format data and save to s3
responses$prison <- as.character (responses$prison)
responses$role <- as.character (responses$role)
responses$first_name <- as.character (responses$first_name)
responses$surname <- as.character (responses$surname)
responses$quantum_id <- as.character (responses$quantum_id)
responses$quantum_id <- tolower (responses$quantum_id)
responses$email <- as.character(responses$email)
responses$bentham_reason <- as.character(responses$bentham_reason)
responses$drugs_prison_reason <- as.character(responses$drugs_prison_reason)
responses$network_reason <- as.character(responses$network_reason)
responses$visitors_reason <- as.character(responses$visitors_reason)
responses$novel_drugs_reason <- as.character(responses$novel_drugs_reason)
responses$date_requested <- as.Date(responses$date_requested, origin = "1970-01-01")
runApp()
library(readr)
write_csv(pris_lookup, "prison_area_lookup.csv")
## Load prison dropdown from s3
# dt.prisons <- data.table::as.data.table(s3tools::s3_path_to_full_df(
#   "alpha-app-anvil-access-tool/prisons_and_offices_v2.csv", header = FALSE))
dt.prisons <- data.table::as.data.table(s3tools::s3_path_to_full_df(
"alpha-app-anvil-access-tool/prison_area_lookup.csv", header = FALSE))
runApp()
View(dt.prisons[active == T])
## Load prison dropdown from s3
# dt.prisons <- data.table::as.data.table(s3tools::s3_path_to_full_df(
#   "alpha-app-anvil-access-tool/prisons_and_offices_v2.csv", header = FALSE))
dt.prisons <- data.table::as.data.table(s3tools::s3_path_to_full_df(
"alpha-app-anvil-access-tool/prison_area_lookup.csv", header = FALSE))
unique(dt.prisons[active == T, soct_region])
runApp()
runApp()
shiny::runApp()
View(dt.prisons)
shiny::runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
View(dt.prisons)
## global.R
## Load libraries
library(shiny)          ##
library(shinydashboard) ##
library(shinyWidgets)   ##
library(shinythemes)    ##
library(data.table)     ##
library(DT)             ##
library(shinyjs)        ##
library(shinyalert)     ##
library(readr)          ##
## Check if app is being opening in IE and warn if so
##NOT CURRENTLY WORKING.........
shinyjs::useShinyjs()
tags$meta("http-equiv" = "X-UA-compatible", content = "IE = edge")
includeScript("www/IE.js")
## Load prison dropdown from s3
# dt.prisons <- data.table::as.data.table(s3tools::s3_path_to_full_df(
#   "alpha-app-anvil-access-tool/prisons_and_offices_v2.csv", header = FALSE))
dt.prisons <- data.table::as.data.table(s3tools::s3_path_to_full_df(
"alpha-app-anvil-access-tool/prison_area_lookup.csv", header = FALSE))
fields <- c("first_name", "surname", "prison", "role", "quantum_id",
"bentham", "bentham_reason", "drugs_prison", "drugs_prison_reason",
"network", "network_reason", "visitors", "visitors_reason",
"novel_drugs", "novel_drugs_reason",
"date_requested", "account", "email")
email_choice <- c("@noms.gsi.gov.uk", "@justice.gov.uk", "@hmps.gov.uk", "@hmcts.gov.uk",
"@probation.gov.uk", "@justice.gsi.gov.uk", "@digital.justice.gov.uk")
foundErrors <- 0
quantumErr <- 0
tick <- "<i class=\"fa fa-check de-color\" aria-hidden=\"true\"></i>"
cross <- "<i class=\"fa fa-times de-color\" aria-hidden=\"true\"></i>"
saveData <- function (data) {
## Reload data from S3
responses <- as.data.table(s3tools::s3_path_to_full_df(
"alpha-app-anvil-access-tool/anvil-app-responses_v5.csv", header = TRUE,
col_types = list(
col_character(),
col_character(),
col_character(),
col_character(),
col_character(),
col_integer(),
col_character(),
col_integer(),
col_character(),
col_integer(),
col_character(),
col_integer(),
col_character(),
col_integer(),
col_character(),
col_date(),
col_character(),
col_character()
)))
names(responses) <- fields
responses[date_requested == "", date_requested := NA]
responses[bentham == "", bentham := 0]
responses[bentham_reason == "", bentham_reason := NA]
responses[drugs_prison == "", drugs_prison := 0]
responses[drugs_prison_reason == "", drugs_prison_reason := NA]
responses[network == "", network := 0]
responses[network_reason == "", network_reason := NA]
responses[visitors == "", visitors := 0]
responses[visitors_reason == "", visitors_reason := NA]
responses[novel_drugs == "", novel_drugs := 0]
responses[novel_drugs_reason == "", novel_drugs_reason := NA]
responses$date_requested <- as.Date(responses$date_requested, origin = "1970-01-01")
if (exists ("responses")) {
data$bentham <- as.integer(data$bentham)
data$drugs_prison <- as.integer(data$drugs_prison)
data$network <- as.integer(data$network)
data$visitors <- as.integer(data$visitors)
data$novel_drugs <- as.integer(data$novel_drugs)
responses <- rbind(responses, data, fill = TRUE)
} else {
responses <- data
responses$bentham <- as.integer(data$bentham)
responses$drugs_prison <- as.integer(data$drugs_prison)
data$network <- as.integer(data$network)
data$visitors <- as.integer(data$visitors)
data$novel_drugs <- as.integer(data$novel_drugs)
responses$account <- "Requested"
}
#Format data and save to s3
responses$prison <- as.character (responses$prison)
responses$role <- as.character (responses$role)
responses$first_name <- as.character (responses$first_name)
responses$surname <- as.character (responses$surname)
responses$quantum_id <- as.character (responses$quantum_id)
responses$quantum_id <- tolower (responses$quantum_id)
responses$email <- as.character(responses$email)
responses$bentham_reason <- as.character(responses$bentham_reason)
responses$drugs_prison_reason <- as.character(responses$drugs_prison_reason)
responses$network_reason <- as.character(responses$network_reason)
responses$visitors_reason <- as.character(responses$visitors_reason)
responses$novel_drugs_reason <- as.character(responses$novel_drugs_reason)
responses$date_requested <- as.Date(responses$date_requested, origin = "1970-01-01")
s3tools::write_df_to_csv_in_s3 (responses,
"alpha-app-anvil-access-tool/anvil-app-responses_v5.csv",
overwrite = TRUE,
row.names = FALSE)
}
loadData <- function() {
responses <- as.data.table(s3tools::s3_path_to_full_df(
"alpha-app-anvil-access-tool/anvil-app-responses_v5.csv", header = TRUE))
names(responses) <- fields
responses
}
View(dt.prisons)
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
?unlist
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
responses <- loadData()
View(responses)
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
responses <- loadData()
## global.R
## Load libraries
library(shiny)          ##
library(shinydashboard) ##
library(shinyWidgets)   ##
library(shinythemes)    ##
library(data.table)     ##
library(DT)             ##
library(shinyjs)        ##
library(shinyalert)     ##
library(readr)          ##
## Check if app is being opening in IE and warn if so
##NOT CURRENTLY WORKING.........
shinyjs::useShinyjs()
tags$meta("http-equiv" = "X-UA-compatible", content = "IE = edge")
includeScript("www/IE.js")
## Load prison dropdown from s3
# dt.prisons <- data.table::as.data.table(s3tools::s3_path_to_full_df(
#   "alpha-app-anvil-access-tool/prisons_and_offices_v2.csv", header = FALSE))
dt.prisons <- data.table::as.data.table(s3tools::s3_path_to_full_df(
"alpha-app-anvil-access-tool/prison_area_lookup.csv", header = FALSE))
fields <- c("first_name", "surname", "prison", "role", "quantum_id",
"bentham", "bentham_reason", "drugs_prison", "drugs_prison_reason",
"network", "network_reason", "visitors", "visitors_reason",
"novel_drugs", "novel_drugs_reason",
"date_requested", "account", "email")
email_choice <- c("@noms.gsi.gov.uk", "@justice.gov.uk", "@hmps.gov.uk", "@hmcts.gov.uk",
"@probation.gov.uk", "@justice.gsi.gov.uk", "@digital.justice.gov.uk")
foundErrors <- 0
quantumErr <- 0
tick <- "<i class=\"fa fa-check de-color\" aria-hidden=\"true\"></i>"
cross <- "<i class=\"fa fa-times de-color\" aria-hidden=\"true\"></i>"
saveData <- function (data) {
## Reload data from S3
responses <- as.data.table(s3tools::s3_path_to_full_df(
"alpha-app-anvil-access-tool/anvil-app-responses_v5.csv", header = TRUE,
col_types = list(
col_character(),
col_character(),
col_character(),
col_character(),
col_character(),
col_integer(),
col_character(),
col_integer(),
col_character(),
col_integer(),
col_character(),
col_integer(),
col_character(),
col_integer(),
col_character(),
col_date(),
col_character(),
col_character()
)))
names(responses) <- fields
responses[date_requested == "", date_requested := NA]
responses[bentham == "", bentham := 0]
responses[bentham_reason == "", bentham_reason := NA]
responses[drugs_prison == "", drugs_prison := 0]
responses[drugs_prison_reason == "", drugs_prison_reason := NA]
responses[network == "", network := 0]
responses[network_reason == "", network_reason := NA]
responses[visitors == "", visitors := 0]
responses[visitors_reason == "", visitors_reason := NA]
responses[novel_drugs == "", novel_drugs := 0]
responses[novel_drugs_reason == "", novel_drugs_reason := NA]
responses$date_requested <- as.Date(responses$date_requested, origin = "1970-01-01")
if (exists ("responses")) {
data$bentham <- as.integer(data$bentham)
data$drugs_prison <- as.integer(data$drugs_prison)
data$network <- as.integer(data$network)
data$visitors <- as.integer(data$visitors)
data$novel_drugs <- as.integer(data$novel_drugs)
responses <- rbind(responses, data, fill = TRUE)
} else {
responses <- data
responses$bentham <- as.integer(data$bentham)
responses$drugs_prison <- as.integer(data$drugs_prison)
data$network <- as.integer(data$network)
data$visitors <- as.integer(data$visitors)
data$novel_drugs <- as.integer(data$novel_drugs)
responses$account <- "Requested"
}
#Format data and save to s3
responses$prison <- as.character (responses$prison)
responses$role <- as.character (responses$role)
responses$first_name <- as.character (responses$first_name)
responses$surname <- as.character (responses$surname)
responses$quantum_id <- as.character (responses$quantum_id)
responses$quantum_id <- tolower (responses$quantum_id)
responses$email <- as.character(responses$email)
responses$bentham_reason <- as.character(responses$bentham_reason)
responses$drugs_prison_reason <- as.character(responses$drugs_prison_reason)
responses$network_reason <- as.character(responses$network_reason)
responses$visitors_reason <- as.character(responses$visitors_reason)
responses$novel_drugs_reason <- as.character(responses$novel_drugs_reason)
responses$date_requested <- as.Date(responses$date_requested, origin = "1970-01-01")
s3tools::write_df_to_csv_in_s3 (responses,
"alpha-app-anvil-access-tool/anvil-app-responses_v5.csv",
overwrite = TRUE,
row.names = FALSE)
}
loadData <- function() {
responses <- as.data.table(s3tools::s3_path_to_full_df(
"alpha-app-anvil-access-tool/anvil-app-responses_v5.csv", header = TRUE))
names(responses) <- fields
responses
}
responses <- loadData()
View(responses)
runApp()
View(responses)
View(responses)
unlist(responses[[quantum_id == "lqf59n", 5]])
unlist(responses[quantum_id == "lqf59n", 5])
responses[quantum_id == "lqf59n", 5]
View(responses)
responses[quantum_id == "lqf59n", 6]
unlist(responses[quantum_id == "lqf59n", 6])
unlist(responses[quantum_id == "lqf59n", 6]) == 1
any(unlist(responses[quantum_id == "lqf59n", 6]) == 1)
runApp()
runApp()
runApp()
runApp()
runApp()
