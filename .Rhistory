## Load prison dropdown from s3
# dt.prisons <- data.table::as.data.table(s3tools::s3_path_to_full_df(
#   "alpha-app-anvil-access-tool/prisons_and_offices_v2.csv", header = FALSE))
dt.prisons <- data.table::as.data.table(s3tools::s3_path_to_full_df(
"alpha-app-anvil-access-tool/prison_area_lookup_aat.csv", header = FALSE))
fields <- c("first_name", "surname", "prison", "role", "quantum_id",
"bentham", "bentham_reason", "drugs_prison", "drugs_prison_reason",
"network", "network_reason", "visitors", "visitors_reason",
"novel_drugs", "novel_drugs_reason",
"date_requested", "account", "email")
email_choice <- c("@noms.gsi.gov.uk", "@justice.gov.uk", "@hmps.gov.uk", "@hmcts.gov.uk",
"@probation.gov.uk", "@justice.gsi.gov.uk", "@digital.justice.gov.uk")
foundErrors <- 0
quantumErr <- 0
tick <- "<i class=\"fa fa-check de-color\" aria-hidden=\"true\"></i>"
cross <- "<i class=\"fa fa-times de-color\" aria-hidden=\"true\"></i>"
saveData <- function (data) {
## Reload data from S3
responses <- as.data.table(s3tools::s3_path_to_full_df(
"alpha-app-anvil-access-tool/anvil-app-responses_v5.csv", header = TRUE,
col_types = list(
col_character(),
col_character(),
col_character(),
col_character(),
col_character(),
col_integer(),
col_character(),
col_integer(),
col_character(),
col_integer(),
col_character(),
col_integer(),
col_character(),
col_integer(),
col_character(),
col_date(),
col_character(),
col_character()
)))
names(responses) <- fields
responses[date_requested == "", date_requested := NA]
responses[bentham == "", bentham := 0]
responses[bentham_reason == "", bentham_reason := NA]
responses[drugs_prison == "", drugs_prison := 0]
responses[drugs_prison_reason == "", drugs_prison_reason := NA]
responses[network == "", network := 0]
responses[network_reason == "", network_reason := NA]
responses[visitors == "", visitors := 0]
responses[visitors_reason == "", visitors_reason := NA]
responses[novel_drugs == "", novel_drugs := 0]
responses[novel_drugs_reason == "", novel_drugs_reason := NA]
responses$date_requested <- as.Date(responses$date_requested, origin = "1970-01-01")
if (exists ("responses")) {
data$bentham <- as.integer(data$bentham)
data$drugs_prison <- as.integer(data$drugs_prison)
data$network <- as.integer(data$network)
data$visitors <- as.integer(data$visitors)
data$novel_drugs <- as.integer(data$novel_drugs)
responses <- rbind(responses, data, fill = TRUE)
} else {
responses <- data
responses$bentham <- as.integer(data$bentham)
responses$drugs_prison <- as.integer(data$drugs_prison)
data$network <- as.integer(data$network)
data$visitors <- as.integer(data$visitors)
data$novel_drugs <- as.integer(data$novel_drugs)
responses$account <- "Requested"
}
#Format data and save to s3
responses$prison <- as.character (responses$prison)
responses$role <- as.character (responses$role)
responses$first_name <- as.character (responses$first_name)
responses$surname <- as.character (responses$surname)
responses$quantum_id <- as.character (responses$quantum_id)
responses$quantum_id <- tolower (responses$quantum_id)
responses$email <- as.character(responses$email)
responses$bentham_reason <- as.character(responses$bentham_reason)
responses$drugs_prison_reason <- as.character(responses$drugs_prison_reason)
responses$network_reason <- as.character(responses$network_reason)
responses$visitors_reason <- as.character(responses$visitors_reason)
responses$novel_drugs_reason <- as.character(responses$novel_drugs_reason)
responses$date_requested <- as.Date(responses$date_requested, origin = "1970-01-01")
s3tools::write_df_to_csv_in_s3 (responses,
"alpha-app-anvil-access-tool/anvil-app-responses_v5.csv",
overwrite = TRUE,
row.names = FALSE)
}
loadData <- function() {
responses <- as.data.table(s3tools::s3_path_to_full_df(
"alpha-app-anvil-access-tool/anvil-app-responses_v5.csv", header = TRUE))
names(responses) <- fields
responses
}
responses <- loadData()
## global.R
## Load libraries
library(shiny)          ##
library(shinydashboard) ##
library(shinyWidgets)   ##
library(shinythemes)    ##
library(data.table)     ##
library(DT)             ##
library(shinyjs)        ##
library(shinyalert)     ##
library(readr)          ##
## Check if app is being opening in IE and warn if so
##NOT CURRENTLY WORKING.........
shinyjs::useShinyjs()
tags$meta("http-equiv" = "X-UA-compatible", content = "IE = edge")
includeScript("www/IE.js")
## Load prison dropdown from s3
# dt.prisons <- data.table::as.data.table(s3tools::s3_path_to_full_df(
#   "alpha-app-anvil-access-tool/prisons_and_offices_v2.csv", header = FALSE))
dt.prisons <- data.table::as.data.table(s3tools::s3_path_to_full_df(
"alpha-app-anvil-access-tool/prison_area_lookup_aat.csv", header = FALSE))
fields <- c("first_name", "surname", "area", "prison", "role", "quantum_id",
"bentham", "bentham_reason", "drugs_prison", "drugs_prison_reason",
"network", "network_reason", "visitors", "visitors_reason",
"novel_drugs", "novel_drugs_reason",
"date_requested", "account", "email")
email_choice <- c("@noms.gsi.gov.uk", "@justice.gov.uk", "@hmps.gov.uk", "@hmcts.gov.uk",
"@probation.gov.uk", "@justice.gsi.gov.uk", "@digital.justice.gov.uk")
foundErrors <- 0
quantumErr <- 0
tick <- "<i class=\"fa fa-check de-color\" aria-hidden=\"true\"></i>"
cross <- "<i class=\"fa fa-times de-color\" aria-hidden=\"true\"></i>"
saveData <- function (data) {
## Reload data from S3
responses <- as.data.table(s3tools::s3_path_to_full_df(
"alpha-app-anvil-access-tool/anvil-app-responses_v5.csv", header = TRUE,
col_types = list(
col_character(),
col_character(),
col_character(),
col_character(),
col_character(),
col_integer(),
col_character(),
col_integer(),
col_character(),
col_integer(),
col_character(),
col_integer(),
col_character(),
col_integer(),
col_character(),
col_date(),
col_character(),
col_character()
)))
names(responses) <- fields
responses[date_requested == "", date_requested := NA]
responses[bentham == "", bentham := 0]
responses[bentham_reason == "", bentham_reason := NA]
responses[drugs_prison == "", drugs_prison := 0]
responses[drugs_prison_reason == "", drugs_prison_reason := NA]
responses[network == "", network := 0]
responses[network_reason == "", network_reason := NA]
responses[visitors == "", visitors := 0]
responses[visitors_reason == "", visitors_reason := NA]
responses[novel_drugs == "", novel_drugs := 0]
responses[novel_drugs_reason == "", novel_drugs_reason := NA]
responses$date_requested <- as.Date(responses$date_requested, origin = "1970-01-01")
if (exists ("responses")) {
data$bentham <- as.integer(data$bentham)
data$drugs_prison <- as.integer(data$drugs_prison)
data$network <- as.integer(data$network)
data$visitors <- as.integer(data$visitors)
data$novel_drugs <- as.integer(data$novel_drugs)
responses <- rbind(responses, data, fill = TRUE)
} else {
responses <- data
responses$bentham <- as.integer(data$bentham)
responses$drugs_prison <- as.integer(data$drugs_prison)
data$network <- as.integer(data$network)
data$visitors <- as.integer(data$visitors)
data$novel_drugs <- as.integer(data$novel_drugs)
responses$account <- "Requested"
}
#Format data and save to s3
responses$prison <- as.character (responses$prison)
responses$role <- as.character (responses$role)
responses$first_name <- as.character (responses$first_name)
responses$surname <- as.character (responses$surname)
responses$quantum_id <- as.character (responses$quantum_id)
responses$quantum_id <- tolower (responses$quantum_id)
responses$email <- as.character(responses$email)
responses$bentham_reason <- as.character(responses$bentham_reason)
responses$drugs_prison_reason <- as.character(responses$drugs_prison_reason)
responses$network_reason <- as.character(responses$network_reason)
responses$visitors_reason <- as.character(responses$visitors_reason)
responses$novel_drugs_reason <- as.character(responses$novel_drugs_reason)
responses$date_requested <- as.Date(responses$date_requested, origin = "1970-01-01")
s3tools::write_df_to_csv_in_s3 (responses,
"alpha-app-anvil-access-tool/anvil-app-responses_v5.csv",
overwrite = TRUE,
row.names = FALSE)
}
loadData <- function() {
responses <- as.data.table(s3tools::s3_path_to_full_df(
"alpha-app-anvil-access-tool/anvil-app-responses_v5.csv", header = TRUE))
names(responses) <- fields
responses
}
responses <- loadData()
View(responses)
responses <- loadData()
## global.R
## Load libraries
library(shiny)          ##
library(shinydashboard) ##
library(shinyWidgets)   ##
library(shinythemes)    ##
library(data.table)     ##
library(DT)             ##
library(shinyjs)        ##
library(shinyalert)     ##
library(readr)          ##
## Check if app is being opening in IE and warn if so
##NOT CURRENTLY WORKING.........
shinyjs::useShinyjs()
tags$meta("http-equiv" = "X-UA-compatible", content = "IE = edge")
includeScript("www/IE.js")
## Load prison dropdown from s3
# dt.prisons <- data.table::as.data.table(s3tools::s3_path_to_full_df(
#   "alpha-app-anvil-access-tool/prisons_and_offices_v2.csv", header = FALSE))
dt.prisons <- data.table::as.data.table(s3tools::s3_path_to_full_df(
"alpha-app-anvil-access-tool/prison_area_lookup_aat.csv", header = FALSE))
fields <- c("first_name", "surname", "area", "prison", "role", "quantum_id",
"bentham", "bentham_reason", "drugs_prison", "drugs_prison_reason",
"network", "network_reason", "visitors", "visitors_reason",
"novel_drugs", "novel_drugs_reason",
"date_requested", "account", "email")
email_choice <- c("@noms.gsi.gov.uk", "@justice.gov.uk", "@hmps.gov.uk", "@hmcts.gov.uk",
"@probation.gov.uk", "@justice.gsi.gov.uk", "@digital.justice.gov.uk")
foundErrors <- 0
quantumErr <- 0
tick <- "<i class=\"fa fa-check de-color\" aria-hidden=\"true\"></i>"
cross <- "<i class=\"fa fa-times de-color\" aria-hidden=\"true\"></i>"
saveData <- function (data) {
## Reload data from S3
responses <- as.data.table(s3tools::s3_path_to_full_df(
"alpha-app-anvil-access-tool/anvil-app-responses_v5.csv", header = TRUE,
col_types = list(
col_character(),
col_character(),
col_character(),
col_character(),
col_character(),
col_integer(),
col_character(),
col_integer(),
col_character(),
col_integer(),
col_character(),
col_integer(),
col_character(),
col_integer(),
col_character(),
col_date(),
col_character(),
col_character()
)))
names(responses) <- fields
responses[date_requested == "", date_requested := NA]
responses[bentham == "", bentham := 0]
responses[bentham_reason == "", bentham_reason := NA]
responses[drugs_prison == "", drugs_prison := 0]
responses[drugs_prison_reason == "", drugs_prison_reason := NA]
responses[network == "", network := 0]
responses[network_reason == "", network_reason := NA]
responses[visitors == "", visitors := 0]
responses[visitors_reason == "", visitors_reason := NA]
responses[novel_drugs == "", novel_drugs := 0]
responses[novel_drugs_reason == "", novel_drugs_reason := NA]
responses$date_requested <- as.Date(responses$date_requested, origin = "1970-01-01")
if (exists ("responses")) {
data$bentham <- as.integer(data$bentham)
data$drugs_prison <- as.integer(data$drugs_prison)
data$network <- as.integer(data$network)
data$visitors <- as.integer(data$visitors)
data$novel_drugs <- as.integer(data$novel_drugs)
responses <- rbind(responses, data, fill = TRUE)
} else {
responses <- data
responses$bentham <- as.integer(data$bentham)
responses$drugs_prison <- as.integer(data$drugs_prison)
data$network <- as.integer(data$network)
data$visitors <- as.integer(data$visitors)
data$novel_drugs <- as.integer(data$novel_drugs)
responses$account <- "Requested"
}
#Format data and save to s3
responses$prison <- as.character (responses$prison)
responses$role <- as.character (responses$role)
responses$first_name <- as.character (responses$first_name)
responses$surname <- as.character (responses$surname)
responses$quantum_id <- as.character (responses$quantum_id)
responses$quantum_id <- tolower (responses$quantum_id)
responses$email <- as.character(responses$email)
responses$bentham_reason <- as.character(responses$bentham_reason)
responses$drugs_prison_reason <- as.character(responses$drugs_prison_reason)
responses$network_reason <- as.character(responses$network_reason)
responses$visitors_reason <- as.character(responses$visitors_reason)
responses$novel_drugs_reason <- as.character(responses$novel_drugs_reason)
responses$date_requested <- as.Date(responses$date_requested, origin = "1970-01-01")
s3tools::write_df_to_csv_in_s3 (responses,
"alpha-app-anvil-access-tool/anvil-app-responses_v5.csv",
overwrite = TRUE,
row.names = FALSE)
}
loadData <- function() {
responses <- as.data.table(s3tools::s3_path_to_full_df(
"alpha-app-anvil-access-tool/anvil-app-responses_v5.csv", header = TRUE))
names(responses) <- fields
responses
}
responses <- loadData()
responses <- responses[area == input$area & (responses$bentham == 1 | responses$drugs_prison == 1 | responses$network == 1| responses$visitors == 1| responses$novel_drugs == 1),
c("first_name", "surname", "role", "quantum_id",
"bentham", "bentham_reason", "drugs_prison", "drugs_prison_reason",
"network", "network_reason", "visitors", "visitors_reason",
"novel_drugs", "novel_drugs_reason",
"date_requested", "account", "email")]
responses <- responses[area == "HQ" & (responses$bentham == 1 | responses$drugs_prison == 1 | responses$network == 1| responses$visitors == 1| responses$novel_drugs == 1),
c("first_name", "surname", "role", "quantum_id",
"bentham", "bentham_reason", "drugs_prison", "drugs_prison_reason",
"network", "network_reason", "visitors", "visitors_reason",
"novel_drugs", "novel_drugs_reason",
"date_requested", "account", "email")]
runApp()
View(responses)
responses <- loadData()
runApp()
responses <- loadData()
access_table <- copy(responses)
access_table$bentham <- ifelse(access_table$bentham == 1, tick, cross)
access_table$drugs_prison <- ifelse(access_table$drugs_prison == 1, tick, cross)
access_table$network <- ifelse(access_table$network == 1, tick, cross)
access_table$visitors <- ifelse(access_table$visitors == 1, tick, cross)
access_table$novel_drugs <- ifelse(access_table$novel_drugs == 1, tick, cross)
View(access_table[, c(1:5, 7, 12)])
View(access_table)
datatable(access_table[, c(1:3, 6:7, 9, 11, 13, 15, 19)], escape = FALSE,
options = list(paging = FALSE,
scrollCollapse = T,
dom = "ft",
scrollX = FALSE,
scrollY = "500px"),
rownames = FALSE,
colnames = c("First Name", "Surname", "Prison", "Quantum ID",
"Bentham", "Drugs in Prisons", "Network",
"Visitors", "Novel Drugs",
"Account Status")
)
colnames(access_table[, c(1:3, 6:7, 9, 11, 13, 15, 19)])
colnames(access_table[, c(1:3, 6:7, 9, 11, 13, 15, 18)])
?datatable
datatable(access_table[, c(1:3, 6:7, 9, 11, 13, 15, 18)], escape = FALSE,
options = list(paging = FALSE,
scrollCollapse = T,
dom = "ft",
scrollX = FALSE,
scrollY = "500px"),
rownames = FALSE,
colnames = c("First Name", "Surname", "Prison", "Quantum ID",
"Bentham", "Drugs in Prisons", "Network",
"Visitors", "Novel Drugs",
"Account Status")
)
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
?renderText
runApp()
HTML(paste0("This Quantum account already has access, or has requested access to, the following apps:",
paste(alreadys, collapse = ", "),
"<br>If you think this is not the case please email intel_app_support.digital.justice.gov.uk and explain your case."))
bentham_already <- T
alreadys <- c()
if (bentham_already) { alreadys <- c(alreadys, "<br>Seized Media Database (previously Bentham)") }
if (drugs_already) { alreadys <- c(alreadys, "<br>Drug Conveyancing App") }
if (network_already) { alreadys <- c(alreadys, "<br>Prison Network App") }
if (visitors_already) { alreadys <- c(alreadys, "<br>Prison Visitors App") }
if (novel_drugs_already) { alreadys <- c(alreadys, "<br>Novel Drug Words App") }
HTML(paste0("This Quantum account already has access, or has requested access to, the following apps:",
paste(alreadys, collapse = ", "),
"<br>If you think this is not the case please email intel_app_support.digital.justice.gov.uk and explain your case."))
renderText({
HTML(paste0("This Quantum account already has access, or has requested access to, the following apps:",
paste(alreadys, collapse = ", "),
"<br>If you think this is not the case please email intel_app_support.digital.justice.gov.uk and explain your case."))
})
runApp()
runApp()
## Reload data from S3
responses <- as.data.table(s3tools::s3_path_to_full_df(
"alpha-app-anvil-access-tool/anvil-app-responses_v5.csv", header = TRUE,
col_types = list(
col_character(),
col_character(),
col_character(),
col_character(),
col_character(),
col_character(),
col_integer(),
col_character(),
col_integer(),
col_character(),
col_integer(),
col_character(),
col_integer(),
col_character(),
col_integer(),
col_character(),
col_date(),
col_character(),
col_character()
)))
names(responses) <- fields
fields <- c("first_name", "surname", "area", "prison", "role", "quantum_id",
"bentham", "bentham_reason", "drugs_prison", "drugs_prison_reason",
"network", "network_reason", "visitors", "visitors_reason",
"novel_drugs", "novel_drugs_reason",
"date_requested", "account", "email")
names(responses) <- fields
View(responses)
responses[date_requested == "", date_requested := NA]
responses[bentham == "", bentham := 0]
responses[bentham_reason == "", bentham_reason := NA]
View(responses)
responses[bentham_reason == "" | is.null(bentham_reason), bentham_reason := NA]
View(responses)
responses[bentham_reason == "" | is.null(bentham_reason) | bentham_reason == "NULL", bentham_reason := NA]
View(responses)
runApp()
runApp()
?reset
runApp()
runApp()
?reactive
?reactiveEvent
?eventReactive
runApp()
runApp()
responses_all <- eventReactive(eventExpr = input$area, {
responses <- loadData()
responses <- responses[(bentham == 1 | drugs_prison == 1 | network == 1 | visitors == 1 | novel_drugs == 1),
c("first_name", "surname", "role", "quantum_id",
"bentham", "bentham_reason", "drugs_prison", "drugs_prison_reason",
"network", "network_reason", "visitors", "visitors_reason",
"novel_drugs", "novel_drugs_reason",
"date_requested", "account", "email", "area")]
print("in all")
print(head(responses, 1))
return(responses)
}, priority = 1)
responses_all <- observeReactive(eventExpr = input$area, {
responses <- loadData()
responses <- responses[(bentham == 1 | drugs_prison == 1 | network == 1 | visitors == 1 | novel_drugs == 1),
c("first_name", "surname", "role", "quantum_id",
"bentham", "bentham_reason", "drugs_prison", "drugs_prison_reason",
"network", "network_reason", "visitors", "visitors_reason",
"novel_drugs", "novel_drugs_reason",
"date_requested", "account", "email", "area")]
print("in all")
print(head(responses, 1))
return(responses)
}, priority = 1)
observeEvent(eventExpr = input$area, {
responses_all <- loadData()
responses_all <- responses_all[(bentham == 1 | drugs_prison == 1 | network == 1 | visitors == 1 | novel_drugs == 1),
c("first_name", "surname", "role", "quantum_id",
"bentham", "bentham_reason", "drugs_prison", "drugs_prison_reason",
"network", "network_reason", "visitors", "visitors_reason",
"novel_drugs", "novel_drugs_reason",
"date_requested", "account", "email", "area")]
print("in all")
print(head(responses, 1))
}, priority = 1)
observeEvent(eventExpr = input$area, {
responses_subset <- responses_all[area == input$area & (bentham == 1 | drugs_prison == 1 | network == 1 | visitors == 1 | novel_drugs == 1)]
print("in subset")
print(head(responses, 1))
return(responses)
}, priority = 2)
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
## Load prison dropdown from s3
# dt.prisons <- data.table::as.data.table(s3tools::s3_path_to_full_df(
#   "alpha-app-anvil-access-tool/prisons_and_offices_v2.csv", header = FALSE))
dt.prisons <- data.table::as.data.table(s3tools::s3_path_to_full_df(
"alpha-app-anvil-access-tool/prison_area_lookup_aat.csv", header = FALSE))
View(dt.prisons)
runApp()
